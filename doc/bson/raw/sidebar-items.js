initSidebarItems({"enum":[["ErrorKind","The different categories of errors that can be returned when reading from raw BSON."],["RawBson","A BSON value referencing raw bytes stored elsewhere."],["ValueAccessErrorKind","The type of error encountered when using a direct getter (e.g. [`crate::RawDocument::get_str`])."]],"struct":[["Error","An error that occurs when attempting to parse raw BSON bytes."],["Iter","An iterator over the document’s entries."],["RawArray","A slice of a BSON document containing a BSON array value (akin to [`std::str`]). This can be retrieved from a [`RawDocument`] via [`RawDocument::get`]."],["RawArrayIter","An iterator over borrowed raw BSON array values."],["RawBinary","A BSON binary value referencing raw bytes stored elsewhere."],["RawDbPointer","A BSON DB pointer value referencing raw bytes stored elesewhere."],["RawDocument","A slice of a BSON document (akin to [`std::str`]). This can be created from a [`RawDocumentBuf`] or any type that contains valid BSON data, including static binary literals, Vec, or arrays."],["RawDocumentBuf","An owned BSON document (akin to [`std::path::PathBuf`]), backed by a buffer of raw BSON bytes. This can be created from a `Vec<u8>` or a [`crate::Document`]."],["RawJavaScriptCodeWithScope","A BSON “code with scope” value referencing raw bytes stored elsewhere."],["RawRegex","A BSON regex referencing raw bytes stored elsewhere."],["ValueAccessError","Error to indicate that either a value was empty or it contained an unexpected type, for use with the direct getters (e.g. [`crate::RawDocument::get_str`])."]],"type":[["Result",""],["ValueAccessResult",""]]});