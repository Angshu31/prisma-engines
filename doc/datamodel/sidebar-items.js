initSidebarItems({"fn":[["is_reserved_type_name","Is this a valid type name for the Prisma client API?"],["parse_configuration","Loads all configuration blocks from a datamodel using the built-in source definitions."],["parse_datamodel","Parses and validates a datamodel string, using core attributes only."],["parse_datamodel_or_pretty_error","Parses and validates a datamodel string, using core attributes only. In case of an error, a pretty, colorful string is returned."],["parse_schema","Parse and validate the whole schema"],["parse_schema_ast",""],["render_datamodel_and_config_to_string","Renders a datamodel, sources and generators to a string."],["render_datamodel_to","Renders as a string into the stream."],["render_datamodel_to_string","Renders to a return string."],["render_datamodel_to_with_preview_flags","Renders as a string into the stream."],["render_schema_ast_to_string","Renders an AST to a string."]],"mod":[["ast","This module contains the data structures and parsing function for the AST of a Prisma schema."],["common","This module contains shared constants and logic that can be used by engines."],["dml",""],["json","This module contains the logic to turn models into their JSON/DMMF representation."],["walkers","This module contains convenience functions to easily traverse a Datamodel tree. The most prominent functionality is the pain free navigation of relations."]],"struct":[["Configuration",""],["Datasource","a `datasource` from the prisma schema."],["Generator",""],["StringFromEnvVar","Either an env var or a string literal."]],"type":[["ValidatedConfiguration",""],["ValidatedDatamodel",""]]});